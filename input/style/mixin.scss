@import "../../style/themes/default";
@import "../../style/mixins/index";

// Input
$input-padding-horizontal    : 10px;
$input-padding-vertical-base : 8px;
$input-padding-horizontal-sm : 8px;
$input-padding-vertical-sm   : 4px;

$input-color                 : $text-color;
$input-border-color          : $border-color-base;
$input-bg                    : $background-color-white;

$input-hover-border-color    : $primary-color;
$input-disabled-bg           : $background-color-base;

// input status
// == when focus or actived
@mixin active($color: $outline-color) {
  border-color: tint($color, 15%);
  outline: 0;
  box-shadow: 0 0 $outline-blur-size $outline-width fade($color, 20%);
}

// == when hoverd
@mixin hover($color: $input-hover-border-color) {
  border-color: tint($color, 15%);
  color: #333;
}

@mixin disabled() {
  background-color: $input-disabled-bg;
  opacity: 1;
  cursor: $cursor-disabled;
  color: $disabled-color;
  &:hover {
    border-color: $input-border-color;
  }
}
// size mixins for input
@mixin input-sm() {
  font-size: $font-size-sm;
  padding: $input-padding-vertical-sm $input-padding-horizontal-sm;
  height: $height-sm;
}

@mixin input-base() {
  position: relative;
  display: inline-block;
  box-sizing: $border-size;
  padding: $input-padding-vertical-base $input-padding-horizontal;
  width: 100%;
  height: $height-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
  border: 1px solid $input-border-color;
  border-radius: $border-radius-base;
}

// Basic style for input
@mixin input($inputClass) {
  white-space: normal;
  word-break: break-all;
  box-sizing: $border-size;
  // view 模式
  &-view,
  &-disabled {
    &.#{$inputClass}-textarea .#{$inputClass}-container {
      white-space: pre-wrap;
      word-break: break-all;
      word-break: break-word;
      word-wrap: break-word;
      overflow-wrap: break-word;
    }
  }
  &-view {
    padding: $input-padding-vertical-base 0;
    min-height: $height-base;
    word-break: break-all;
    line-height: $line-height-base;
  }
  &-password {
    .#{$inputClass}-container > div {
      position: relative;
      top: 4px;
      &.#{$inputClass}-empty,
      &.#{$inputClass}-placeholder {
        top: 0;
      }
    }
  }
  &:hover input {
    @include hover();
  }

  input, textarea {
    @include input-base();
    cursor: text;
    color: $input-color;
    background-color: $input-bg;
    background-image: none;
    @include placeholder(); // Reset placeholder
    transition: border .2s $ease-in-out, background .2s $ease-in-out, box-shadow .2s $ease-in-out;

    &:hover {
      @include hover();
    }

    &:focus {
      @include active();
    }

    &[disabled],
    fieldset[disabled] & {
      @include disabled();
    }
  }
  input {
    //height: auto;  // 避免内容不垂直居中，IE11上高度未撑开
    padding-top: 0;
    padding-bottom: 0;
    line-height: $height-base - 2;
    &:hover,
    &:focus {
      + .#{$inputClass}-clearIcon {
        display: block;
      }
    }
  }

  &-container {
    position: relative;
    background-color: inherit;
    &-showClearIcon {
      input:hover,
      input:focus {
        padding-right: $font-size-base * 2;
      }
    }
  }

  // Reset height for `textarea`s
  textarea {
    line-height: 1.3;
    max-width: 100%; // prevent textearea resize from coming out of its container
    height: 100%;
    vertical-align: bottom;
    &:not(&-autosize) {
      resize: none;
    }
  }
  &-textarea {
    background-color: inherit;
    &-content {
      > div:first-child {
        overflow: hidden;
      }
      > .mt-btn {
        position: absolute;
        height: 1em;
        right: 0;
        bottom: -1em;
      }
      &-ellipsis > div:first-child {
        position: relative;
        &:after {
          content: "...";
          position: absolute;
          bottom: 0;
          background-color: inherit;
          right: 0;
          padding-left: 0.5em;
        }
      }
    }
    > span {
      background-color: inherit;
    }
  }
  .#{$inputClass}-clearIcon {
    display: none;
    line-height: $height-base - 4;
    position: absolute;
    padding: 0 6px;
    right: 0;
    top: 0;
    margin: 2px;
    cursor: pointer;
    color: $border-color-base;
    z-index: 2;
    background-color: $background-color-white;
    &:hover,
    &:focus {
      display: block;
      color: $icon-color;
    }
  }

  // 禁用状态抛弃原生 input/textarea , 以便于文本的拷贝
  &-disabled {
    .#{$inputClass}-container {
      @include input-base();
      @include disabled();
    }
    .#{$inputClass}-group .#{$inputClass}-container {
      float: left;
    }
    // textarea 禁用时的高度限制
    &.#{$inputClass}-textarea {
      overflow: hidden;
      .#{$inputClass}-container {
        height: auto;
        min-height: $height-base;
        overflow-x: hidden;
        overflow-y: auto;
      }
    }
    &:not(.#{$inputClass}-textarea) .#{$inputClass}-container {
      overflow-x: auto;
      overflow-y: hidden;
      white-space: nowrap;
    }
  }
  &-disabled &-placeholder {
    color: $placeholder-color;
  }

  // invalid
  &-explain, &-showCount {
    font-size: $font-size-sm;
    margin-top: 2px;
  }
  &-showCount {
    float: right;
    color: $text-aide-color;
    > i {
      font-style: normal;
    }
  }
  &.has-error {
    input, textarea {
      border-color: $error-color;
    }
    .#{$inputClass}-showCount-overCount,
    .#{$inputClass}-explain {
      color: $error-color;
    }
  }

  // Size
  &-sm {
    font-size: $font-size-sm;
    input, textarea {
      @include input-sm();
      + .#{$inputClass}-clearIcon {
        line-height: $height-sm - 4;
        font-size: $font-size-sm;
      }
    }
    &.#{$inputClass}-view {
      padding: 4px 0;
      min-height: $height-sm;
      line-height: $line-height-base;
    }
    &.#{$inputClass}-disabled {
      .#{$inputClass}-container {
        @include input-sm();
        min-height: $height-sm;
      }
      &.#{$inputClass}-textarea {
        min-height: $height-sm;
        .#{$inputClass}-container {
          height: auto;
        }
      }
    }
    input {
      line-height: $height-sm - 4;
    }
    textarea {
      line-height: 1.2;
      height: 100%;
    }
  }
}

// label input
@mixin input-group($inputClass) {
  position: relative;
  display: table;
  border-collapse: separate;
  width: 100%;

  .#{$inputClass}-group-addon-container .#{$inputClass}-container {
    &,
    > input,
    > textarea {
      border-radius: 0;
    }
  }

  // Undo padding and float of grid classes
  &[class*="col-"] {
    float: none;
    padding-left: 0;
    padding-right: 0;
  }

  > [class*="col-"] {
    padding-right: 8px;
  }
  &-addon,
  &-wrap,
  input {
    display: table-cell;
  }

  &-addon,
  &-wrap {
    width: 1%;
    white-space: nowrap;
    vertical-align: middle;
  }

  &-wrap > * {
    display: block !important;
  }

  input {
    position: relative;
    z-index: 2;
    float: left;
    width: 100%;
    margin-bottom: 0;
  }

  &-addon {
    padding: $input-padding-vertical-base $input-padding-horizontal;
    font-size: $font-size-base;
    font-weight: normal;
    color: $input-color;
    text-align: center;
    line-height: 1;
    background-color: $background-color-gray;
    border: 1px solid $input-border-color;
    border-radius: $border-radius-base;

    // Reset Select's style in addon
    .#{$prefix-cls}-select {
      margin: -($input-padding-vertical-base + 1) (-$input-padding-horizontal);  // lesshint spaceAroundOperator: false

      .#{$prefix-cls}-select-selection {
        background-color: inherit;
        margin: -1px;
        border: 1px solid transparent;
      }

      &-open,
      &-focused {
        .#{$prefix-cls}-select-selection {
          border-color: tint($primary-color, 15%);
        }
      }
    }
  }

  // Reset rounded corners
  > span > input :first-child,
   > input:first-child,
   &-addon:first-child {
     border-bottom-right-radius: 0;
     border-top-right-radius: 0;
  
     // Reset Select's style in addon
     .#{$prefix-cls}-select .#{$prefix-cls}-select-selection {
       border-bottom-right-radius: 0;
       border-top-right-radius: 0;
     }
   }

  &-addon:first-child {
    border-right: 0;
  }
  &-addon:last-child {
    border-left: 0;
  }

  > input:last-child,
  &-addon:last-child {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;

    // Reset Select's style in addon
    .#{$prefix-cls}-select .#{$prefix-cls}-select-selection {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }
  }

  // Sizing options
  &-sm input,
  &-sm > &-addon {
    @include input-sm();
    + .#{$inputClass}-clearIcon {
      line-height: $height-sm - 4;
      font-size: $font-size-sm;
    }
    &.#{$inputClass}-view {
      padding-left: 0;
      padding-right: 0;
    }
  }
}
